{"version":3,"file":"ng-terminal.umd.js","sources":["ng://ng-terminal/lib/ng-terminal.service.ts","ng://ng-terminal/lib/ng-terminal.component.ts","ng://ng-terminal/lib/global-style/global-style.component.ts","ng://ng-terminal/lib/ng-terminal.module.ts","ng://ng-terminal/lib/functions-using-csi.ts","ng://ng-terminal/lib/ng-terminal.ts","ng://ng-terminal/lib/display-option.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgTerminalService {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","import { Component, OnInit, AfterViewChecked, Input, Output, EventEmitter, OnDestroy } from '@angular/core';\r\nimport { Terminal } from 'xterm';\r\nimport * as fit from 'xterm/lib/addons/fit/fit';\r\nimport { NgTerminal } from './ng-terminal';\r\nimport { Subject, Observable, Subscription } from 'rxjs';\r\nimport { DisplayOption } from './display-option';\r\nimport { ResizeEvent } from 'angular-resizable-element';\r\n\r\n@Component({\r\n  selector: 'ng-terminal',\r\n  templateUrl: './ng-terminal.component.html',\r\n  styleUrls: ['./ng-terminal.component.css']\r\n})\r\nexport class NgTerminalComponent implements OnInit, AfterViewChecked, NgTerminal, OnDestroy {\r\n  private term: Terminal\r\n  private keyInputSubject: Subject<string> = new Subject<string>();\r\n  private keyEventSubject = new Subject<{key: string; domEvent: KeyboardEvent;}>();\r\n  \r\n  \r\n  private keyInputSubjectSubscription: Subscription;\r\n  private keyEventSubjectSubscription: Subscription;\r\n  private h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n  private displayOption: DisplayOption = {};\r\n  private dataSource: Observable<string>;\r\n  private dataSourceSubscription: Subscription;\r\n  terminalStyle: object = {};// height: (this.h / 2) + 'px' };\r\n  \r\n  @Input('dataSource')\r\n  set _dataSource(ds) {\r\n    if(this.dataSourceSubscription != null){\r\n      this.dataSourceSubscription.unsubscribe();\r\n    }\r\n    this.dataSource = ds;\r\n    this.dataSourceSubscription = this.dataSource.subscribe((data) => {\r\n      this.write(data);\r\n    })\r\n  }\r\n  get _dataSource() {\r\n    return this.dataSource;\r\n  }\r\n\r\n  @Input('displayOption')\r\n  set _displayOption(opt: DisplayOption){\r\n    this.setDisplayOption(opt);\r\n  }\r\n\r\n  @Output('keyInput')\r\n  keyInputEmitter  = new EventEmitter<string>();\r\n\r\n  @Output('keyEvent')\r\n  keyEventEmitter  = new EventEmitter<{key: string; domEvent: KeyboardEvent;}>();\r\n\r\n  constructor() { }\r\n\r\n  private observableSetup(){\r\n    this.term.on('data', (input) => {\r\n      this.keyInputSubject.next(input);\r\n    });\r\n    this.term.onKey(e => {\r\n      this.keyEventSubject.next(e);\r\n    })\r\n    this.keyInputSubjectSubscription = this.keyInputSubject.subscribe((data) => {\r\n      this.keyInputEmitter.emit(data);\r\n    })\r\n    this.keyEventSubjectSubscription = this.keyEventSubject.subscribe((e) => {\r\n      this.keyEventEmitter.emit(e);\r\n    })\r\n  }\r\n\r\n  /**\r\n   * set block or inline-block to #terminal for fitting client or outer element\r\n   */\r\n  private setTerminalBlock(isBlock: boolean){\r\n    if(isBlock)\r\n      this.terminalStyle['display'] = 'block';\r\n    else\r\n      this.terminalStyle['display'] = 'inline-block';\r\n  }\r\n\r\n  /**\r\n   * set dimensions\r\n   */\r\n  private setTerminalDimension(left: number, top: number, width: number, height: number) {\r\n    this.terminalStyle['left'] = `${left}px`;\r\n    this.terminalStyle['top'] = `${top}px`;\r\n    this.terminalStyle['width'] = `${width}px`;\r\n    this.terminalStyle['height'] = `${height}px`;\r\n  }\r\n  \r\n  /**\r\n   * remove dimensions\r\n   */\r\n  private removeTerminalDimension(){\r\n    this.terminalStyle['left'] = undefined;\r\n    this.terminalStyle['top'] = undefined;\r\n    this.terminalStyle['width'] = undefined;\r\n    this.terminalStyle['height'] = undefined;\r\n  }\r\n\r\n  /**\r\n   * When a dimension of div changes, fit a terminal in div.\r\n   */\r\n  ngAfterViewChecked() {\r\n    if(this.displayOption.fixedGrid == null)\r\n      fit.fit(this.term);\r\n  }\r\n\r\n  /**\r\n   * It creates new terminal in #terminal.\r\n   */\r\n  ngOnInit() {\r\n    Terminal.applyAddon(fit);  // Apply the `fit` addon   \r\n    this.term = new Terminal();\r\n    this.term.open(document.getElementById('terminal'));\r\n    this.observableSetup();\r\n  }\r\n\r\n  /**\r\n   * clean all resources\r\n   */\r\n  ngOnDestroy(): void {\r\n    if(this.keyInputSubjectSubscription)\r\n      this.keyInputSubjectSubscription.unsubscribe();\r\n    if(this.dataSourceSubscription)\r\n      this.dataSourceSubscription.unsubscribe();\r\n    if(this.keyEventSubjectSubscription){\r\n      this.keyEventSubjectSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  write(chars: string) {\r\n    this.term.write(chars);\r\n  }\r\n  \r\n  setDisplayOption(opt: DisplayOption){\r\n    if(opt.fixedGrid != null){\r\n      console.debug(\"resizable will be ignored.\")\r\n      this.term.resize(opt.fixedGrid.cols, opt.fixedGrid.rows);\r\n      this.setTerminalBlock(false);\r\n      this.removeTerminalDimension();\r\n    }else{\r\n      this.removeTerminalDimension();\r\n      this.setTerminalBlock(true);\r\n    }\r\n    this.displayOption = opt;\r\n  }\r\n\r\n  get keyInput(): Observable<string> {\r\n    return this.keyInputSubject;\r\n  }\r\n\r\n  get keyEventInput(): Observable<{key: string; domEvent: KeyboardEvent;}> {\r\n    return this.keyEventSubject;\r\n  }\r\n\r\n  get underlying(): Terminal {\r\n    return this.term;\r\n  }\r\n\r\n  get isDraggableOnEdgeActivated() {\r\n    return this.displayOption.activateDraggableOnEdge != undefined && this.displayOption.fixedGrid == undefined;\r\n  }\r\n\r\n  /**\r\n   * After user coordinate dimensions of terminal, it's called.\r\n   * @param left \r\n   * @param top \r\n   * @param width \r\n   * @param height \r\n   */\r\n  onResizeEnd(left: number, top: number, width: number, height: number): void {\r\n    this.setTerminalDimension(left, top, width, height);\r\n  }\r\n\r\n  /**\r\n   * Before onResizeEnd is called, it valiates dimensions to change.\r\n   * @param re dimension to be submitted from resizable stuff\r\n   */\r\n  validatorFactory(): (re: ResizeEvent) => boolean {\r\n    const comp = this;\r\n    return (re: ResizeEvent) =>{ \r\n      const displayOption = comp.displayOption;\r\n      if(displayOption.activateDraggableOnEdge){\r\n        let left = re.rectangle.left, top = re.rectangle.top, width = re.rectangle.width, height = re.rectangle.height;\r\n        if ((width < displayOption.activateDraggableOnEdge.minWidth) || (height < displayOption.activateDraggableOnEdge.minHeight)) {\r\n          return false;\r\n        } else return true;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'global-style',\r\n  templateUrl: './global-style.component.html',\r\n  styleUrls: ['../../../../../node_modules/xterm/dist/xterm.css'],  //global styles\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class GlobalStyleComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NgTerminalComponent } from './ng-terminal.component';\r\nimport { ResizableModule } from 'angular-resizable-element';\r\nimport { GlobalStyleComponent } from './global-style/global-style.component';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [NgTerminalComponent, GlobalStyleComponent],\r\n  imports: [\r\n    ResizableModule, CommonModule\r\n  ],\r\n  exports: [NgTerminalComponent]\r\n})\r\nexport class NgTerminalModule { }\r\n","/**\r\n *\r\n * It is a CSI sequences generator\r\n * https://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-Functions-using-CSI-_-ordered-by-the-final-character_s_\r\n */\r\nlet CSI = '\\x9b'\r\nexport class FunctionsUsingCSI {\r\n    /**\r\n     *  CSI Ps @  Insert Ps (Blank) Character(s) (default = 1) (ICH). \r\n     * \r\n     * */\r\n    static insertBlank(count: number){\r\n        return `${CSI}${count}@`; \r\n    }\r\n    /**\r\n     *  CSI Ps SP @ */\r\n    /**\r\n     *  CSI Ps A  Cursor Up Ps Times (default = 1) (CUU). \r\n     * \\x9b3A*/\r\n    static cursorUp(count: number){\r\n        return `${CSI}${count}A`;\r\n    }\r\n    /**\r\n     *  CSI Ps SP A */\r\n    /**\r\n     *  CSI Ps B  Cursor Down Ps Times (default = 1) (CUD).\r\n     * \\x9b3B */\r\n    static cursorDown(count: number){\r\n        return `${CSI}${count}B`;\r\n    }\r\n    /**\r\n     *  CSI Ps C  Cursor Forward Ps Times (default = 1) (CUF). \r\n     * \\x9b3C */\r\n    static cursorForward(count: number){\r\n        return `${CSI}${count}C`;\r\n    }\r\n    /**\r\n     *  CSI Ps D  Cursor Backward Ps Times (default = 1) (CUB). \r\n     * \\x9b3D */\r\n    static cursorBackward(count: number){\r\n        return `${CSI}${count}D`;\r\n    }\r\n    /**\r\n     *  CSI Ps E  Cursor Next Line Ps Times (default = 1) (CNL). \r\n     * \\x9b3E\r\n     * */\r\n    static cursorNextLine(count: number){\r\n        return `${CSI}${count}E`;\r\n    }\r\n    /**\r\n     *  CSI Ps F  Cursor Preceding Line Ps Times (default = 1) (CPL).\r\n     * \\x9b3F\r\n     *  */\r\n    static cursorPrecedingLine(count: number){\r\n        return `${CSI}${count}F`;\r\n    }\r\n    /**\r\n     *  CSI Ps G  Cursor Character Absolute  [column] (default = [row,1]) (CHA).\r\n     *  \\x9b9G\r\n     *  */\r\n    static cursorColumn(count: number){\r\n        return `${CSI}${count}G`;\r\n    }\r\n    /**\r\n     *  CSI Ps ; Ps H  Cursor Position [row;column] (default = [1,1]) (CUP).\r\n     * \\x9b2;2H\r\n     * */\r\n    static cursorPosition(row: number, col: number){\r\n        return `${CSI}${row};${col}H`;\r\n    }\r\n    /**\r\n     *  CSI Ps I  Cursor Forward Tabulation Ps tab stops (default = 1) (CHT). */\r\n    /**\r\n     *  CSI Ps J  Erase in Display (ED), VT100.\r\n     *      Ps = 0  -> Erase Below (default).\r\n     *      Ps = 1  -> Erase Above.\r\n     *      Ps = 2  -> Erase All.\r\n     *      Ps = 3  -> Erase Saved Lines (xterm).\r\n     * \\x9b2J\r\n     *  */\r\n    static eraseInDisplay(category: KindOfEraseInDisplay){\r\n        return `${CSI}${category}J`;\r\n    }\r\n\r\n    /**\r\n     *  CSI ? Ps J\r\n     *  Erase in Display (DECSED), VT220.\r\n     *    Ps = 0  -> Selective Erase Below (default).\r\n     *    Ps = 1  -> Selective Erase Above.\r\n     *    Ps = 2  -> Selective Erase All.\r\n     *    Ps = 3  -> Selective Erase Saved Lines (xterm).\r\n     * \\x9b?2J \r\n     * */\r\n    static eraseSelectiveThingsInDisplay(category: KindOfEraseInDisplay){\r\n        return `${CSI}?${category}J`;\r\n    }\r\n    /**\r\n     *  CSI Ps K  \r\n     *   Erase in Line (EL), VT100.\r\n     *     Ps = 0  -> Erase to Right (default).\r\n     *     Ps = 1  -> Erase to Left.\r\n     *     Ps = 2  -> Erase All.\r\n     * \\x9b?1K\r\n     * */\r\n    static eraseInLine(category: KindOfEraseInLine){\r\n        return `${CSI}${category}K`;\r\n    }\r\n    /**\r\n     *  CSI ? Ps K \r\n     *    Erase in Line (DECSEL), VT220.\r\n     *      Ps = 0  -> Selective Erase to Right (default).\r\n     *      Ps = 1  -> Selective Erase to Left.\r\n     *      Ps = 2  -> Selective Erase All.\r\n     * \\x9b?1K\r\n     * */\r\n    static eraseSelectiveThingsInLine(category: KindOfEraseInLine){\r\n        return `${CSI}?${category}K`;\r\n    }\r\n    /**\r\n     *  CSI Ps L  Insert Ps Line(s) (default = 1) (IL).\r\n     * \\x9b2L\r\n     *  */\r\n    static insertLines(count: number){\r\n        return `${CSI}${count}L`;\r\n    }\r\n    /**\r\n     *  CSI Ps M  Delete Ps Line(s) (default = 1) (DL).\r\n     * \\x9b2M\r\n     *  */\r\n    static deleteLines(count: number){\r\n        return `${CSI}${count}M`;\r\n    }\r\n    /**\r\n     *  CSI Ps P  Delete Ps Character(s) (default = 1) (DCH).\r\n     * \\x9b2P\r\n     *  */\r\n    static deleteCharacter(count: number){\r\n        return `${CSI}${count}P`;\r\n    }\r\n    /**\r\n     *  CSI Ps S  Scroll up Ps lines (default = 1) (SU), VT420, ECMA-48.\r\n     * \\x9b2S\r\n     *  */\r\n    static scrollUpLines(count: number){\r\n        return `${CSI}${count}S`;\r\n    }\r\n    /**\r\n     *  CSI ? Pi ; Pa ; Pv S */\r\n    /**\r\n     *  CSI Ps T  Scroll down Ps lines (default = 1) (SD), VT420. \r\n     * \\x9b2T\r\n     * */\r\n    static scrollDownLines(count: number){\r\n        return `${CSI}${count}T`;\r\n    }\r\n    /**\r\n     *  CSI Ps ; Ps ; Ps ; Ps ; Ps T */\r\n    /**\r\n     *  CSI > Ps ; Ps T */\r\n    /**\r\n     *  CSI Ps X  Erase Ps Character(s) (default = 1) (ECH).\r\n     * \\x9b2X\r\n     *  */\r\n    static eraseCharacters(count: number){\r\n        return `${CSI}${count}X`;\r\n    }\r\n    /**\r\n     *  CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT). */\r\n    /**\r\n     *  CSI Ps ^  Scroll down Ps lines (default = 1) (SD), ECMA-48. */\r\n    /**\r\n     *  CSI Pm `  Character Position Absolute  [column] (default = [row,1]) */\r\n    /**\r\n     *  CSI Pm a  Character Position Relative  [columns] (default = [row,col+1]) */\r\n    /**\r\n     *  CSI Ps b  Repeat the preceding graphic character Ps times (REP). */\r\n    /**\r\n     *  CSI Ps c  Send Device Attributes (Primary DA). */\r\n    /**\r\n     *  CSI = Ps c */\r\n    /**\r\n     *  CSI > Ps c */\r\n    /**\r\n     *  CSI Pm d  Line Position Absolute  [row] (default = [1,column]) (VPA). */\r\n    /**\r\n     *  CSI Pm e  Line Position Relative  [rows] (default = [row+1,column]) */\r\n    /**\r\n     *  CSI Ps ; Ps f */\r\n    /**\r\n     *  CSI Ps g  Tab Clear (TBC). */\r\n    /**\r\n     *  CSI Pm h  Set Mode (SM). */\r\n    /**\r\n     *  CSI ? Pm h */\r\n    /**\r\n     *  CSI Pm i  Media Copy (MC). */\r\n    /**\r\n     *  CSI ? Pm i */\r\n    /**\r\n     *  CSI Pm l  Reset Mode (RM). */\r\n    /**\r\n     *  CSI ? Pm l */\r\n    /**\r\n     *  CSI Pm m  Character Attributes (SGR). */\r\n    /**\r\n     *  CSI > Ps ; Ps m */\r\n    /**\r\n     *  CSI Ps n  Device Status Report (DSR). */\r\n    /**\r\n     *  CSI > Ps n */\r\n    /**\r\n     *  CSI ? Ps n */\r\n    /**\r\n     *  CSI > Ps p */\r\n    /**\r\n     *  CSI ! p   Soft terminal reset (DECSTR), VT220 and up. */\r\n    /**\r\n     *  CSI Ps ; Ps \" p */\r\n    /**\r\n     *  CSI Ps $ p */\r\n    /**\r\n     *  CSI ? Ps $ p */\r\n    /**\r\n     *  CSI # p */\r\n    /**\r\n     *  CSI Ps ; Ps # p */\r\n    /**\r\n     *  CSI Ps q  Load LEDs (DECLL), VT100. */\r\n    /**\r\n     *  CSI Ps SP q */\r\n    /**\r\n     *  CSI Ps \" q */\r\n    /**\r\n     *  CSI # q   Pop video attributes from stack (XTPOPSGR), xterm.  This is an */\r\n    /**\r\n     *  CSI Ps ; Ps r */\r\n    /**\r\n     *  CSI ? Pm r */\r\n    /**\r\n     *  CSI Pt ; Pl ; Pb ; Pr ; Ps $ r */\r\n    /**\r\n     *  CSI s     Save cursor, available only when DECLRMM is disabled (SCOSC, */\r\n    /**\r\n     *  CSI Pl ; Pr s */\r\n    /**\r\n     *  CSI ? Pm s */\r\n    /**\r\n     *  CSI Ps ; Ps ; Ps t */\r\n    /**\r\n     *  CSI > Ps ; Ps t */\r\n    /**\r\n     *  CSI Ps SP t */\r\n    /**\r\n     *  CSI Pt ; Pl ; Pb ; Pr ; Ps $ t */\r\n    /**\r\n     *  CSI u     Restore cursor (SCORC, also ANSI.SYS). */\r\n    /**\r\n     *  CSI Ps SP u */\r\n    /**\r\n     *  CSI Pt ; Pl ; Pb ; Pr ; Pp ; Pt ; Pl ; Pp $ v */\r\n    /**\r\n     *  CSI Ps $ w */\r\n    /**\r\n     *  CSI Pt ; Pl ; Pb ; Pr ' w */\r\n    /**\r\n     *  CSI Ps x  Request Terminal Parameters (DECREQTPARM). */\r\n    /**\r\n     *  CSI Ps * x */\r\n    /**\r\n     *  CSI Pc ; Pt ; Pl ; Pb ; Pr $ x */\r\n    /**\r\n     *  CSI Ps # y */\r\n    /**\r\n     *  CSI Pi ; Pg ; Pt ; Pl ; Pb ; Pr * y */\r\n    /**\r\n     *  CSI Ps ; Pu ' z */\r\n    /**\r\n     *  CSI Pt ; Pl ; Pb ; Pr $ z */\r\n    /**\r\n     *  CSI Pm ' { */\r\n    /**\r\n     *  CSI # { */\r\n    /**\r\n     *  CSI Ps ; Ps # { */\r\n    /**\r\n     *  CSI Pt ; Pl ; Pb ; Pr $ { */\r\n    /**\r\n     *  CSI Pt ; Pl ; Pb ; Pr # | */\r\n    /**\r\n     *  CSI Ps $ | */\r\n    /**\r\n     *  CSI Ps ' | */\r\n    /**\r\n     *  CSI Ps * | */\r\n    /**\r\n     *  CSI # }   Pop video attributes from stack (XTPOPSGR), xterm.  Popping */\r\n    /**\r\n     *  CSI Pm ' } */\r\n    /**\r\n     *  CSI Pm ' ~ */\r\n}\r\nexport enum KindOfEraseInDisplay{\r\n    Below=0, Above=1, All=2, SavedLines=3\r\n}\r\nexport enum KindOfEraseInLine{\r\n    Right=0, Left=1, All=2\r\n}","import { Subscription, Observable } from 'rxjs';\r\nimport { Terminal } from 'xterm';\r\nimport { DisplayOption } from './display-option';\r\n\r\nexport interface NgTerminal {\r\n    /**\r\n     * write print charactors or control sequences to the xterm directly\r\n     * @param chars charactors to write\r\n     */\r\n    write(chars: string)\r\n    /**\r\n     * getter only provided\r\n     * A observable to emit printable characters when a user typed on the div for the xterm\r\n     * @deprecated since version 2.1.0\r\n     */\r\n    readonly keyInput: Observable<string>\r\n    \r\n    /**\r\n     * getter only provided\r\n     * A observable to emit keys and keyboard event when a user typed on the div for the xterm\r\n     */\r\n    readonly keyEventInput: Observable<{key: string; domEvent: KeyboardEvent;}>\r\n    /**\r\n     * getter only provided\r\n     * return the core object of the terminal where you can control everything directly\r\n     */\r\n    readonly underlying: Terminal\r\n    /**\r\n     * change row, col, draggable\r\n     */\r\n    setDisplayOption(opt: DisplayOption): void\r\n}\r\n","/**\r\n * options for dimensions of terminal.\r\n * fixedGrid has high priority than activateDraggableOnEdge's\r\n */\r\nexport interface DisplayOption{\r\n    fixedGrid?: {rows: number, cols: number};\r\n    activateDraggableOnEdge?: {\r\n        minWidth: number,\r\n        minHeight: number\r\n    }\r\n}"],"names":["Injectable","Subject","EventEmitter","fit.fit","Terminal","fit","Component","Input","Output","ViewEncapsulation","NgModule","ResizableModule","CommonModule"],"mappings":"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"}